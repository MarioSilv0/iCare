name: Fullstack CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: dotnet restore backend/backend.csproj

      - name: Build project
        run: dotnet build backend/backend.csproj --configuration Release --no-restore

      - name: Run tests
        run: dotnet test backend/backend.csproj --configuration Release --no-build --verbosity normal


  frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: icare.client
        run: npm ci

      - name: Build Angular app
        working-directory: icare.client
        run: npm run build --if-present

      - name: Install Google Chrome (para testes Angular)
        run: |
          sudo apt update
          sudo apt install -y google-chrome-stable

      - name: Run tests
        working-directory: icare.client
        run: |
          export CHROME_BIN=$(which google-chrome-stable)
          npm run test -- --watch=false --browsers=ChromeHeadlessNoSandbox


  sonar_analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install .NET SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin /k:"iCare" /o:"mariosilv0-28mads" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          dotnet build backend/backend.csproj --configuration Release
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
